<UserControl
  x:Class="Arabiyya.Theme.DemoApp.Views.TabControlView"
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:vm="using:Arabiyya.Theme.DemoApp.ViewModels"
  d:DesignHeight="650"
  d:DesignWidth="800"
  mc:Ignorable="d">

  <Design.DataContext>
    <vm:TabControlViewModel />
  </Design.DataContext>

  <ScrollViewer>
    <StackPanel Margin="20" Spacing="30">
      <TextBlock Classes="h2" Text="Tab Controls" />

      <!--  Introduction  -->
      <Border
        Padding="15"
        Background="{DynamicResource Brush.Surface}"
        BorderBrush="{DynamicResource Brush.Divider}"
        BorderThickness="1"
        CornerRadius="8">
        <TextBlock TextWrapping="Wrap">
          Tab controls provide a way to organize content into separate views that users can navigate between.
          This showcase demonstrates various tab styles and configurations available in the Arabiyya theme.
        </TextBlock>
      </Border>

      <!--  Standard Tab Control  -->
      <StackPanel>
        <TextBlock
          Margin="0,0,0,10"
          Classes="h3"
          Text="Standard Tab Control" />

        <Border
          Background="{DynamicResource Brush.Surface}"
          BorderBrush="{DynamicResource Brush.Divider}"
          BorderThickness="1"
          CornerRadius="8">
          <TabControl Height="180">
            <TabItem Header="First Tab">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This is the content for the first tab. Standard tabs use an underline to indicate the active tab and are ideal for basic content organization." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Second Tab">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This is the content for the second tab. Hover over different tabs to see the interaction states." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Third Tab">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This is the content for the third tab. Tab controls automatically handle content switching when a new tab is selected." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Disabled Tab" IsEnabled="False">
              <TextBlock Text="This content won't be accessible" />
            </TabItem>
          </TabControl>
        </Border>

        <!--  Usage description  -->
        <TextBlock
          Margin="0,10,0,0"
          Text="Standard tabs with underline styling are ideal for most content organization needs. The selected tab is highlighted with the primary color and a bottom border."
          TextWrapping="Wrap" />
      </StackPanel>

      <!--  Button Style Tabs  -->
      <StackPanel>
        <TextBlock
          Margin="0,0,0,10"
          Classes="h3"
          Text="Button Style Tabs" />

        <Border
          Background="{DynamicResource Brush.Surface}"
          BorderBrush="{DynamicResource Brush.Divider}"
          BorderThickness="1"
          CornerRadius="8">
          <TabControl Height="180" Classes="ButtonTabs">
            <TabItem Header="Dashboard">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This is the dashboard view. Button-style tabs look like buttons and provide clear visual separation between tabs." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Analytics">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This is the analytics view. Button-style tabs are great for application-like interfaces where tab switching represents significant view changes." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Settings">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This is the settings view. Notice how the button tabs maintain their appearance across different themes." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Help" IsEnabled="False">
              <TextBlock Text="This content won't be accessible" />
            </TabItem>
          </TabControl>
        </Border>

        <!--  Usage description  -->
        <TextBlock
          Margin="0,10,0,0"
          Text="Button style tabs provide a more interactive feel and stronger visual separation between options. They're excellent for main navigation or significant view changes."
          TextWrapping="Wrap" />
      </StackPanel>

      <!--  Card Style Tabs  -->
      <StackPanel>
        <TextBlock
          Margin="0,0,0,10"
          Classes="h3"
          Text="Card Style Tabs" />

        <Border
          Background="{DynamicResource Brush.Surface}"
          BorderBrush="{DynamicResource Brush.Divider}"
          BorderThickness="1"
          CornerRadius="8">
          <TabControl Height="180" Classes="CardTabs">
            <TabItem Header="Profile">
              <Border
                Margin="0"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="0 0 4 4">
                <TextBlock Text="This is the profile view. Card-style tabs create a seamless connection between the tab and its content." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Account">
              <Border
                Margin="0"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="0 0 4 4">
                <TextBlock Text="This is the account view. Card-style tabs are excellent for form-based interfaces and settings panels." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Notifications">
              <Border
                Margin="0"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="0 0 4 4">
                <TextBlock Text="This is the notifications view. Notice how the selected tab connects to the content area with no visual separation." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Security" IsEnabled="False">
              <TextBlock Text="This content won't be accessible" />
            </TabItem>
          </TabControl>
        </Border>

        <!--  Usage description  -->
        <TextBlock
          Margin="0,10,0,0"
          Text="Card style tabs visually connect the tab with its content, creating a seamless experience. They're ideal for settings panels, user profiles, and form-based interfaces."
          TextWrapping="Wrap" />
      </StackPanel>

      <!--  Pill Style Tabs  -->
      <StackPanel>
        <TextBlock
          Margin="0,0,0,10"
          Classes="h3"
          Text="Pill Style Tabs" />

        <Border
          Background="{DynamicResource Brush.Surface}"
          BorderBrush="{DynamicResource Brush.Divider}"
          BorderThickness="1"
          CornerRadius="8">
          <TabControl Height="180" Classes="PillTabs">
            <TabItem Header="Today">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This shows today's data. Pill-style tabs use a rounded pill shape to highlight the selected tab." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="This Week">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This shows this week's data. Pill tabs are useful for date ranges, filter categories, or view modes." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="This Month">
              <Border
                Margin="5"
                Padding="10"
                Background="{DynamicResource Brush.Surface.Elevated1}"
                CornerRadius="4">
                <TextBlock Text="This shows this month's data. The pill shape creates a distinct visual that clearly shows which option is selected." TextWrapping="Wrap" />
              </Border>
            </TabItem>
            <TabItem Header="Custom Range" IsEnabled="False">
              <TextBlock Text="This content won't be accessible" />
            </TabItem>
          </TabControl>
        </Border>

        <!--  Usage description  -->
        <TextBlock
          Margin="0,10,0,0"
          Text="Pill style tabs use a rounded background to highlight the selected state. They're great for filter controls, date range selectors, and view mode toggles."
          TextWrapping="Wrap" />
      </StackPanel>

      <!--  Tab Placement Options  -->
      <StackPanel>
        <TextBlock
          Margin="0,0,0,10"
          Classes="h3"
          Text="Tab Placement Options" />

        <Grid
          Margin="0,0,0,15"
          ColumnDefinitions="*,*"
          RowDefinitions="Auto,Auto">
          <!--  Left Placement  -->
          <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Margin="0,0,10,15">
            <TextBlock Margin="0,0,0,5" Text="Left Placement" />
            <Border
              Background="{DynamicResource Brush.Surface}"
              BorderBrush="{DynamicResource Brush.Divider}"
              BorderThickness="1"
              CornerRadius="8">
              <TabControl Height="180" TabStripPlacement="Left">
                <TabItem Header="Users">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Left-side tabs are great for wider content areas and application layouts." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
                <TabItem Header="Groups">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Side tabs provide more vertical space for tab labels." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
                <TabItem Header="Permissions">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Side tabs work well for administrative interfaces and settings." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
              </TabControl>
            </Border>
          </StackPanel>

          <!--  Right Placement  -->
          <StackPanel
            Grid.Row="0"
            Grid.Column="1"
            Margin="0,0,0,15">
            <TextBlock Margin="0,0,0,5" Text="Right Placement" />
            <Border
              Background="{DynamicResource Brush.Surface}"
              BorderBrush="{DynamicResource Brush.Divider}"
              BorderThickness="1"
              CornerRadius="8">
              <TabControl Height="180" TabStripPlacement="Right">
                <TabItem Header="Overview">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Right-side tabs can be useful for secondary navigation or detail panels." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
                <TabItem Header="Details">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Right tabs work well in right-to-left layouts or secondary interfaces." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
                <TabItem Header="History">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Consider using right tabs for supplementary information or log views." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
              </TabControl>
            </Border>
          </StackPanel>

          <!--  Bottom Placement  -->
          <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="0,0,0,0">
            <TextBlock Margin="0,0,0,5" Text="Bottom Placement" />
            <Border
              Background="{DynamicResource Brush.Surface}"
              BorderBrush="{DynamicResource Brush.Divider}"
              BorderThickness="1"
              CornerRadius="8">
              <TabControl Height="180" TabStripPlacement="Bottom">
                <TabItem Header="Step 1">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Bottom tabs work well for wizard interfaces or sequential processes." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
                <TabItem Header="Step 2">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Bottom-placed tabs can be useful when the top of the content area needs to remain uncluttered." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
                <TabItem Header="Step 3">
                  <Border
                    Margin="5"
                    Padding="10"
                    Background="{DynamicResource Brush.Surface.Elevated1}"
                    CornerRadius="4">
                    <TextBlock Text="Consider using bottom tabs for step-by-step processes or when top navigation is already occupied." TextWrapping="Wrap" />
                  </Border>
                </TabItem>
              </TabControl>
            </Border>
          </StackPanel>
        </Grid>

        <!--  Usage description  -->
        <TextBlock Text="Tab controls support four placement options: Top (default), Left, Right, and Bottom. Choose the placement that best fits your interface layout and information hierarchy." TextWrapping="Wrap" />
      </StackPanel>

      <!--  Tab Style Guidelines  -->
      <StackPanel>
        <TextBlock
          Margin="0,0,0,10"
          Classes="h3"
          Text="Tab Style Guidelines" />

        <Border
          Padding="20"
          Background="{DynamicResource Brush.Surface.Elevated1}"
          BorderBrush="{DynamicResource Brush.Divider}"
          BorderThickness="1"
          CornerRadius="8">
          <StackPanel Spacing="15">
            <TextBlock Classes="h5" Text="When to Use Tabs" />
            <StackPanel Margin="10,0,0,0" Spacing="8">
              <TextBlock Text="• Use tabs to organize related content that users need to switch between" />
              <TextBlock Text="• Use tabs when you have 2-7 distinct sections of content" />
              <TextBlock Text="• Use tabs when all sections are of similar importance" />
              <TextBlock Text="• Consider alternatives (like accordions or navigation menus) for more than 7 sections" />
            </StackPanel>

            <TextBlock
              Margin="0,10,0,0"
              Classes="h5"
              Text="Tab Naming Best Practices" />
            <StackPanel Margin="10,0,0,0" Spacing="8">
              <TextBlock Text="• Use clear, concise labels (1-2 words when possible)" />
              <TextBlock Text="• Be descriptive and specific about the content" />
              <TextBlock Text="• Use consistent naming conventions across all tabs" />
              <TextBlock Text="• Avoid using similar-sounding tab names that could be confused" />
            </StackPanel>

            <TextBlock
              Margin="0,10,0,0"
              Classes="h5"
              Text="Accessibility Considerations" />
            <TextBlock TextWrapping="Wrap">
              Tab controls are automatically keyboard navigable. Users can navigate between tabs using the arrow keys and activate them with Enter or Space. Focus indicators are provided for keyboard navigation, and appropriate ARIA roles are assigned for screen readers.
            </TextBlock>
          </StackPanel>
        </Border>
      </StackPanel>
    </StackPanel>
  </ScrollViewer>
</UserControl>
